// Generated by CoffeeScript 1.12.2
(function() {
  var BufferIterator, flags, tools;

  tools = require('../tools');

  BufferIterator = require('../bufferIterator');

  flags = {
    'enabled': 0x01,
    'inMovie': 0x02,
    'inPreview': 0x04
  };

  module.exports.decode = function(buffer, offset) {
    var data, i, iterator, j, readData;
    iterator = new BufferIterator(buffer);
    data = tools.initBoxData(iterator, flags);
    readData = function() {
      if (data.version === 1) {
        return iterator.read64();
      } else {
        return iterator.read32();
      }
    };
    data.creationTime = readData();
    data.modificationTime = readData();
    data.trackId = iterator.read32();
    iterator.skip(4);
    data.duration = readData();
    iterator.skip(8);
    data.layer = iterator.read16();
    data.alternateGroup = iterator.read16();
    data.volume = iterator.readFixedPoint88();
    data.matrix = [];
    for (i = j = 0; j <= 8; i = ++j) {
      data.matrix.push(iterator.read32());
    }
    data.width = iterator.read32();
    data.height = iterator.read32();
    return data;
  };

  module.exports.encode = function(data) {
    var i, iterator, j, length, writeData;
    length = 80;
    if (data.version === 1) {
      length += 12;
    }
    iterator = tools.writeBoxData(data, length, flags);
    writeData = function(value) {
      if (data.version === 1) {
        return iterator.write64(value);
      } else {
        return iterator.write32(value);
      }
    };
    writeData(data.creationTime);
    writeData(data.modificationTime);
    iterator.write32(data.trackId);
    iterator.skip(4);
    writeData(data.duration);
    iterator.skip(8);
    iterator.write16(data.layer);
    iterator.write16(data.alternateGroup);
    iterator.writeFixedPoint88(data.volume);
    for (i = j = 0; j <= 8; i = ++j) {
      iterator.write32(data.matrix[i]);
    }
    iterator.write32(data.width);
    iterator.write32(data.height);
    return iterator.buffer;
  };

}).call(this);
